<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="//blogs/test.html"/>
      <url>//blogs/test.html</url>
      
        <content type="html"><![CDATA[<h2 id="欧耶"><a href="#欧耶" class="headerlink" title="欧耶"></a>欧耶</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="//blogs/hello-world.html"/>
      <url>//blogs/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ipv6可能会需要的小知识</title>
      <link href="//blogs/ipv6%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%9C%80%E8%A6%81%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86.html"/>
      <url>//blogs/ipv6%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%9C%80%E8%A6%81%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86.html</url>
      
        <content type="html"><![CDATA[<h3 id="ipv6设置"><a href="#ipv6设置" class="headerlink" title="ipv6设置"></a>ipv6设置</h3><ul><li>确保运行商已经接入ipv6</li><li>ipv6可能需要在(光猫、路由器)设置，光猫和路由器因品牌不一，具体设置需要自行百度 </li><li>电脑需开启ipv6<ul><li>控制面板&gt;网络和Internet&gt;网络连接&gt;右击正在使用的网卡&gt;属性&gt;选中Internet协议版本6(TCP&#x2F;IPv6)&gt;确定</li></ul></li></ul><p><strong><a href="http://test-ipv6.com/">点击我查看是否可以使用ipv6</a></strong></p><h3 id="ipv6小知识"><a href="#ipv6小知识" class="headerlink" title="ipv6小知识"></a>ipv6小知识</h3><ol><li>可能需要设置防火墙  (光猫、路由器、服务器)   </li><li>使用ipv6进行http请求的格式http:&#x2F;&#x2F;[ipv6地址]:端口   </li><li>运行商可能会屏蔽一些端口 例如80、8080，使用其他端口即可</li><li>有的游戏可以使用ipv6进行联机，如MC</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ipv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建git服务器</title>
      <link href="//blogs/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
      <url>//blogs/%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8.html</url>
      
        <content type="html"><![CDATA[<h3 id="搭建git服务器"><a href="#搭建git服务器" class="headerlink" title="搭建git服务器"></a>搭建git服务器</h3><ol><li><p>确保已经安装好了git</p></li><li><p>初始化git仓库</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#进入存放仓库目录</span><br><span class="line">sudo git init --bare 仓库.git</span><br></pre></td></tr></table></figure></li><li><p>生成ssh公钥</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p> 公钥保存位置 </p><blockquote><p>可以使用记事本打开 linux下可以使用cat命令查看<br>windows下： C:&#x2F;用户&#x2F;用户名&#x2F;.ssh&#x2F;id_rsa.pub<br>linux下： &#x2F;用户&#x2F;.ssh&#x2F;id_rsa.pub<br>将公钥复制到.ssh&#x2F;authorized_keys文件内</p></blockquote></li><li><p>克隆远程仓库</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@ip:/仓库目录/仓库.git</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipv6进行ssh连接</title>
      <link href="//blogs/ipv6%E8%BF%9B%E8%A1%8Cssh%E8%BF%9E%E6%8E%A5.html"/>
      <url>//blogs/ipv6%E8%BF%9B%E8%A1%8Cssh%E8%BF%9E%E6%8E%A5.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>查看是否可以使用ipv6</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> #查看是否有ipv6地址</span><br></pre></td></tr></table></figure></li><li><p>进行ipv6测试<br><a href="http://ch.test-ipv6.com/index.html.zh_CN">点我查看是否可以使用ipv6</a></p></li><li><p>修改sshd配置</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddressFamily inet6</span><br><span class="line">ListenAddress ::</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>重启sshd服务</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ssh </span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> ipv6 </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机作为服务器(Termux)</title>
      <link href="//blogs/%E6%89%8B%E6%9C%BA%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%99%A8-Termux.html"/>
      <url>//blogs/%E6%89%8B%E6%9C%BA%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%99%A8-Termux.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Termux"><a href="#安装-Termux" class="headerlink" title="安装 Termux"></a>安装 Termux</h2><h3 id="下载方式"><a href="#下载方式" class="headerlink" title="下载方式"></a>下载方式</h3><ul><li><a href="https://f-droid.org/packages/com.termux/">f-droid</a></li><li><a href="https://termux.dev/en/">官网</a></li><li><a href="https://github.com/termux/termux-app#github">gitHub</a></li></ul><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><ol><li>获取手机存储权限 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage </span><br></pre></td></tr></table></figure></li><li>换源 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure></li><li>更新 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg update</span><br></pre></td></tr></table></figure></li><li>安装vm <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install  vim</span><br></pre></td></tr></table></figure></li></ol><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><ol><li>安装openssh <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install openssh </span><br></pre></td></tr></table></figure></li><li>设置密码并开启服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br><span class="line"></span><br><span class="line">sshd</span><br></pre></td></tr></table></figure></li><li>使用远程连接工具连接<blockquote><p>输入ip地址和端口号进行连接  Termuxs的ssh端口号默认为8022</p></blockquote></li></ol><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><ol><li>安装及配置 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx #安装</span><br><span class="line"># 配置nginx</span><br><span class="line"># pkg file 包名 可查询包的相关文件</span><br><span class="line">pkg file nginx </span><br><span class="line">#打开nginx配置文件进行配置即可</span><br><span class="line">vim usr/etc/nginx/nginx.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>启动服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -s start #启动服务</span><br><span class="line">nginx -s reload  #重启服务</span><br><span class="line">nginx -s stop #停止服务</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp #查看端口使用情况</span><br><span class="line">pkill 进程名 #杀死进程</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Termux-自动执行"><a href="#Termux-自动执行" class="headerlink" title="Termux 自动执行"></a>Termux 自动执行</h3><ul><li>Termux开启后会自动执行<code>home/.bashrc</code>文件的内容</li><li>可以将 <code>nginx</code> <code>sshd</code> 等服务自启</li></ul><h3 id="Termux-使用crontab定时任务"><a href="#Termux-使用crontab定时任务" class="headerlink" title="Termux 使用crontab定时任务"></a>Termux 使用crontab定时任务</h3><ol><li><p>安装</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install cronie</span><br></pre></td></tr></table></figure></li><li><p>创建定时任务</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure></li><li><p>编辑器内容说明</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* * * * * command</span><br><span class="line"></span><br><span class="line">第一个* 取值范围0-59 表示分钟</span><br><span class="line">第二个* 取值范围0-23 表示小时</span><br><span class="line">第三个* 取值范围1-31 表示几号</span><br><span class="line">第四个* 取值范围1-12 表示月份</span><br><span class="line">第五个* 取值范围0-7  表示星期</span><br><span class="line">command 表示需要执行的命令</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>查看定时任务</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crond      </span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="//blogs/docker.html"/>
      <url>//blogs/docker.html</url>
      
        <content type="html"><![CDATA[<h3 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h3><h4 id="windows下安装"><a href="#windows下安装" class="headerlink" title="windows下安装"></a>windows下安装</h4><ol><li><p>安装 wsl2</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br><span class="line">wsl --<span class="built_in">set</span>-version &lt;distro name&gt; <span class="number">2</span> </span><br></pre></td></tr></table></figure></li><li><p>设置Linux 用户名和密码</p><blockquote><p>如果 win10&#x2F;win11下启动wsl&#x2F;wsl2出现“占位程序接收到错误数据“启  动  失败的解决办法 管理员身份启动cmd&#x2F;   powershell , 运行 netsh  winsock reset</p></blockquote></li><li><p>安装docker desktop<br><a href="https://www.docker.com/">官网下载</a>安装即可</p></li><li><p>打开docker desktop </p><ul><li>setting&gt;General&gt;启用基于WSL2的引擎</li><li>setting&gt;Resources&gt;WSL integration&gt;启用已安装的WLS2发行版</li></ul></li><li><p>打开已安装的 WSL发行版 输入<code>docker --version</code>显示版本号，输入<code>docker run hello-world</code> 运行测试镜像</p></li></ol><h3 id="docker-换源"><a href="#docker-换源" class="headerlink" title="docker 换源"></a>docker 换源</h3><ul><li>linux：  修改<code>/etc/docker/daemon.json</code>文件，添加</li><li>windows：Docker Desktop &gt; 设置 &gt; Docker Engine 添加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;registry-mirrors&quot;: [</span><br><span class="line">   &quot;https://registry.docker-cn.com&quot;, # docker中国区镜像</span><br><span class="line">   &quot;https://docker.mirrors.ustc.edu.cn/&quot;, # 科技大学</span><br><span class="line">   &quot;https://hub-mirror.c.163.com/&quot;  # 网易</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h3><h4 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version # 显示docker 版本信息</span><br><span class="line">docker info   # 显示docker系统信息</span><br><span class="line">docker 命令 --help # 命令帮助</span><br></pre></td></tr></table></figure><h4 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h4><ol><li><p><strong>查看本地镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker images # 查看本地镜像  </span><br><span class="line">   Options:</span><br><span class="line">   -a, --all             列出全部镜像</span><br><span class="line">   -f, --filter filter   过滤</span><br><span class="line">   -q, --quiet           只显示镜像ID</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      REPOSITORY    TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">      hello-world   latest    9c7a54a9a43c   10 days ago   13.3kB</span><br><span class="line"></span><br><span class="line">      # REPOSITORY 镜像仓库源</span><br><span class="line">      # TAG        镜像标签</span><br><span class="line">      # IMAGE ID   镜像ID</span><br><span class="line">      # CREATED    镜像创建时间</span><br><span class="line">      # SIZE       镜像大小</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>搜索镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名称  # 搜索镜像</span><br><span class="line">   Options:</span><br><span class="line">   -- filter             # 过滤 -- filter = STARS = 2000</span><br></pre></td></tr></table></figure></li><li><p><strong>拉取镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名称:[tag] # 拉取镜像 默认最新版本</span><br></pre></td></tr></table></figure></li><li><p><strong>删除镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f 镜像名称或镜像ID # 删除镜像 </span><br><span class="line">docker rmi -f 镜像名称或镜像ID 镜像名称或镜像ID ... # 删除多个镜像</span><br><span class="line">docker rmi -f $(docker images -aq) # 删除全部镜像 </span><br></pre></td></tr></table></figure></li></ol><h4 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h4><ol><li><p><strong>启动镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run [Options] 镜像 # 启动镜像</span><br><span class="line">   Options:</span><br><span class="line">    --name=&quot;Name&quot;        #容器名字 用来区分容器</span><br><span class="line">    -d                   #后台方式运行</span><br><span class="line">    -it                  #使用交互方式运行，进入容器查看内容</span><br><span class="line">          exit #退出容器</span><br><span class="line">    -p                   #指定容器的端口 </span><br><span class="line">      -p 主机端口:容器端口 #主机端口映射到容器端口</span><br><span class="line">      -p ip:主机端口:容器端口</span><br><span class="line">    -P                   #随机指定端口</span><br></pre></td></tr></table></figure></li><li><p><strong>列出已启动的容器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker ps #列出已启动的容器</span><br><span class="line">   Options:</span><br><span class="line">   -a                   #列出已启动的容器和历史运行过得容器</span><br><span class="line">   -n=个数              #显示最近创建的容器</span><br><span class="line">   -q                   #只显示容器编号 </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>退出容器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit                    #停止容器并退出容器</span><br><span class="line">Ctrl+P+Q                #容器不停止退出</span><br></pre></td></tr></table></figure></li><li><p><strong>删除容器</strong></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器ID                   #删除指定容器 不能删除正在运行的容器</span><br><span class="line">docker rm -f 容器ID               #强制删除指定容器</span><br><span class="line">docker rm -f $(docker ps -aq)     #删除所有容器</span><br><span class="line">docker ps -a -q|xargs docker rm   # 删除所有容器 </span><br></pre></td></tr></table></figure></li><li><p><strong>启动和停止容器</strong></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器ID              #启动容器</span><br><span class="line">docker restart 容器ID            #重启容器</span><br><span class="line">docker stop 容器ID               #停止当前正在运行的容器</span><br><span class="line">docker kill 容器ID               #强制停止容器</span><br></pre></td></tr></table></figure></li></ol><h3 id="常用其他命令"><a href="#常用其他命令" class="headerlink" title="常用其他命令"></a>常用其他命令</h3><h4 id="后台启动容器"><a href="#后台启动容器" class="headerlink" title="后台启动容器"></a>后台启动容器</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d 镜像名</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker logs -tf --tail 个数 容器ID  #查看指定</span><br><span class="line"> Options:</span><br><span class="line"> -tf                    #显示日志时间戳</span><br><span class="line"> --tail 个数            #显示日志的条数</span><br></pre></td></tr></table></figure><h4 id="查看容器中进程信息"><a href="#查看容器中进程信息" class="headerlink" title="查看容器中进程信息"></a>查看容器中进程信息</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top 容器ID</span><br></pre></td></tr></table></figure><h4 id="查看容器元数据"><a href="#查看容器元数据" class="headerlink" title="查看容器元数据"></a>查看容器元数据</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器ID</span><br></pre></td></tr></table></figure><h4 id="进入当前正在运行的容器"><a href="#进入当前正在运行的容器" class="headerlink" title="进入当前正在运行的容器"></a>进入当前正在运行的容器</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方式一</span><br><span class="line">docker exec -it 容器ID  /bin/bash</span><br><span class="line">方式二</span><br><span class="line">docker attach 容器ID </span><br><span class="line"></span><br><span class="line">区别:</span><br><span class="line">docker exec   #进入容器开启一个新的命令行</span><br><span class="line">docker attach  #进入容器当前正在执行的命令行</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="容器拷贝文件到主机"><a href="#容器拷贝文件到主机" class="headerlink" title="容器拷贝文件到主机"></a>容器拷贝文件到主机</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器ID:容器内路径  主机路径</span><br></pre></td></tr></table></figure><h3 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h3><p>将主机目录和容器目录进行映射 双向绑定同步 数据持久化</p><ol><li>指定路径挂载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /主机目录:容器目录 镜像 /bin/bash</span><br></pre></td></tr></table></figure></li><li>具名挂载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 目录名字:容器目录 镜像 /bin/bash</span><br></pre></td></tr></table></figure></li><li>匿名挂载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 容器目录 镜像 /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p> 可以进行多次挂载 -v 可以在一条指令中使用多次<br> -v 容器路径:ro&#x2F;rw 改变容器读写权限 ro代表read-only只读 rw表示read-write可读可写</p></blockquote></li></ol><p>具名挂载和匿名挂载可是使用<code>docker volume ls</code> 查看挂载卷 使用<code>docker volume inspect 挂载卷</code> 可以查看挂载卷具体信息</p><h3 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h3><p>通过容器创建镜像</p><ul><li><h4 id="commit镜像"><a href="#commit镜像" class="headerlink" title="commit镜像"></a>commit镜像</h4> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -a &quot;作者&quot; -m &quot;描述&quot; 容器id  镜像名字:版本</span><br></pre></td></tr></table></figure></li><li><h4 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h4><p>通过脚本来构建docker镜像</p></li></ul><ol><li>docker文件的编写(docker指令)</li></ol><ul><li>关键字都是大写字母</li><li>从上向下执行</li><li>#表示注 释</li><li>每个指令都会创建提交一个新的层   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">docker build -f 文件路径 -t 名字:标签 .</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><p>容器间数据共享 配置信息传递</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -volumes-from 父容器目录 镜像 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客</title>
      <link href="//blogs/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html"/>
      <url>//blogs/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ol><li>安装node.js</li><li>安装git</li><li>注册github</li></ol><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><ol><li><p>新建文件夹</p><blockquote><p>在本地创建博客文件夹</p></blockquote></li><li><p>安装hexo</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure></li><li><p>执行hexo命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="comment"># 初始化项目</span></span><br><span class="line">npm install <span class="comment"># 安装npm依赖包</span></span><br><span class="line">hexo generate <span class="comment"># 生成静态页面 可以简写为 hexo g</span></span><br><span class="line">hexo server <span class="comment"># 生成本地服务 可以简写为 hexo s</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="部署博客到github"><a href="#部署博客到github" class="headerlink" title="部署博客到github"></a>部署博客到github</h2><ol><li><p>新建一个仓库 </p><blockquote><p>仓库路径为：guthub名字.github.io</p></blockquote></li><li><p>将博客项目上传至github</p><p> 安装hexo的上传插件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>打开项目文件夹中的<code>_config.yml</code>文件</p><p> 将deploy下修改为：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你的远程仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>将项目推送到远程仓库</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy # 可以简写为 hexo d</span><br></pre></td></tr></table></figure></li><li><p>使用你的用户名+github.io访问博客</p></li></ol><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ol><li><p>下载主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 远程仓库地址 themes/主题名字</span><br></pre></td></tr></table></figure></li><li><p>配置主题</p><blockquote><p>打开项目文件夹下的<code>_config.yml</code>文件中的<code>theme:主题名字</code></p></blockquote></li><li><p>更新</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g </span><br><span class="line">hexo s </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><ol><li><p>新建博客</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;博客名字&quot;</span><br></pre></td></tr></table></figure><p> 会在项目source文件夹下创建一个<code>.md</code>文件 可以用markdown语法编写博客</p></li><li><p>生成网页</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s # 可以在本地预览 也可以直接执行hexo d 上传到远程仓库</span><br><span class="line">hexo d </span><br></pre></td></tr></table></figure></li></ol><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><ul><li>比如新建标签页  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tages&quot;</span><br></pre></td></tr></table></figure></li><li>打开 &#x2F;source&#x2F;tages&#x2F;index.md，设置其类型 type 值为“tages”  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tages</span><br><span class="line">data: </span><br><span class="line">typee: tages</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
